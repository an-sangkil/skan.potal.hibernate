package com.skan.tms.web.jpa.dto;

import java.io.Serializable;
import java.sql.Time;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * 수동발권 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class ManualTicketManagement implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 자동증가값. */
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long seq;

	/** 공연명. */
	@Column(length=512)
	private String concertName;

	/** 공연부제. */
	@Column(length=512)
	private String concertSubTitle;

	/** 회차 (순서). */
	@Column
	private Integer st;

	/** 공연날짜. */
	private Date concertDate;

	/** 공연 시간(24시). */
	private Time concertStartTime;

	/** 공연종료 시간(24시). */
	private Time concertEndTime;

	/** 주관. */
	@Column(length=128)
	private String conduct;

	/** 주최. */
	@Column(length=128)
	private String host;

	/** 문의처. */
	@Column(length=128)
	private String contactUs;
	
	/**장소 */
	@Column(length=128)
	private String place;
	
	/** 층수 (1층, 2층). */
	private Integer floor;

	/** 구역명. */
	@Column(length=64)
	private String areaName;

	/** 좌석번호. */
	private Integer seatNumber;

	/** 등록자. */
	@Column(length=32)
	private String creator;

	/** 등록시간. */
	private Date creationTime;

	/** 수정자. */
	@Column(length=32)
	private String modifier;

	/** 수정시간. */
	private Date modifiedTime;

	/**
	 * 생성자.
	 */
	public ManualTicketManagement() {
	}

	/**
	 * 자동증가값을 설정합니다..
	 * 
	 * @param seq
	 *            자동증가값
	 */
	public void setSeq(Long seq) {
		this.seq = seq;
	}

	/**
	 * 자동증가값을 가져옵니다..
	 * 
	 * @return 자동증가값
	 */
	public Long getSeq() {
		return this.seq;
	}

	/**
	 * 공연명을 설정합니다..
	 * 
	 * @param concertName
	 *            공연명
	 */
	public void setConcertName(String concertName) {
		this.concertName = concertName;
	}

	/**
	 * 공연명을 가져옵니다..
	 * 
	 * @return 공연명
	 */
	public String getConcertName() {
		return this.concertName;
	}

	/**
	 * 공연부제을 설정합니다..
	 * 
	 * @param concertSubTitle
	 *            공연부제
	 */
	public void setConcertSubTitle(String concertSubTitle) {
		this.concertSubTitle = concertSubTitle;
	}

	/**
	 * 공연부제을 가져옵니다..
	 * 
	 * @return 공연부제
	 */
	public String getConcertSubTitle() {
		return this.concertSubTitle;
	}

	/**
	 * 회차 (순서)을 설정합니다..
	 * 
	 * @param st
	 *            회차 (순서)
	 */
	public void setSt(Integer st) {
		this.st = st;
	}

	/**
	 * 회차 (순서)을 가져옵니다..
	 * 
	 * @return 회차 (순서)
	 */
	public Integer getSt() {
		return this.st;
	}

	/**
	 * 공연날짜을 설정합니다..
	 * 
	 * @param concertDate
	 *            공연날짜
	 */
	public void setConcertDate(Date concertDate) {
		this.concertDate = concertDate;
	}

	/**
	 * 공연날짜을 가져옵니다..
	 * 
	 * @return 공연날짜
	 */
	public Date getConcertDate() {
		return this.concertDate;
	}

	/**
	 * 공연 시간(24시)을 설정합니다..
	 * 
	 * @param concertStartTime
	 *            공연 시간(24시)
	 */
	public void setConcertStartTime(Time concertStartTime) {
		this.concertStartTime = concertStartTime;
	}

	/**
	 * 공연 시간(24시)을 가져옵니다..
	 * 
	 * @return 공연 시간(24시)
	 */
	public Time getConcertStartTime() {
		return this.concertStartTime;
	}

	/**
	 * 공연종료 시간(24시)을 설정합니다..
	 * 
	 * @param concertEndTime
	 *            공연종료 시간(24시)
	 */
	public void setConcertEndTime(Time concertEndTime) {
		this.concertEndTime = concertEndTime;
	}

	/**
	 * 공연종료 시간(24시)을 가져옵니다..
	 * 
	 * @return 공연종료 시간(24시)
	 */
	public Time getConcertEndTime() {
		return this.concertEndTime;
	}

	/**
	 * 주관을 설정합니다..
	 * 
	 * @param conduct
	 *            주관
	 */
	public void setConduct(String conduct) {
		this.conduct = conduct;
	}

	/**
	 * 주관을 가져옵니다..
	 * 
	 * @return 주관
	 */
	public String getConduct() {
		return this.conduct;
	}

	/**
	 * 주최을 설정합니다..
	 * 
	 * @param host
	 *            주최
	 */
	public void setHost(String host) {
		this.host = host;
	}

	/**
	 * 주최을 가져옵니다..
	 * 
	 * @return 주최
	 */
	public String getHost() {
		return this.host;
	}

	/**
	 * 문의처을 설정합니다..
	 * 
	 * @param contactUs
	 *            문의처
	 */
	public void setContactUs(String contactUs) {
		this.contactUs = contactUs;
	}

	/**
	 * 문의처을 가져옵니다..
	 * 
	 * @return 문의처
	 */
	public String getContactUs() {
		return this.contactUs;
	}

	/**
	 * 층수 (1층, 2층)을 설정합니다..
	 * 
	 * @param floor
	 *            층수 (1층, 2층)
	 */
	public void setFloor(Integer floor) {
		this.floor = floor;
	}

	/**
	 * 층수 (1층, 2층)을 가져옵니다..
	 * 
	 * @return 층수 (1층, 2층)
	 */
	public Integer getFloor() {
		return this.floor;
	}

	/**
	 * 구역명을 설정합니다..
	 * 
	 * @param areaName
	 *            구역명
	 */
	public void setAreaName(String areaName) {
		this.areaName = areaName;
	}

	/**
	 * 구역명을 가져옵니다..
	 * 
	 * @return 구역명
	 */
	public String getAreaName() {
		return this.areaName;
	}

	/**
	 * 좌석번호을 설정합니다..
	 * 
	 * @param seatNumber
	 *            좌석번호
	 */
	public void setSeatNumber(Integer seatNumber) {
		this.seatNumber = seatNumber;
	}

	/**
	 * 좌석번호을 가져옵니다..
	 * 
	 * @return 좌석번호
	 */
	public Integer getSeatNumber() {
		return this.seatNumber;
	}

	/**
	 * 등록자을 설정합니다..
	 * 
	 * @param creator
	 *            등록자
	 */
	public void setCreator(String creator) {
		this.creator = creator;
	}

	/**
	 * 등록자을 가져옵니다..
	 * 
	 * @return 등록자
	 */
	public String getCreator() {
		return this.creator;
	}

	/**
	 * 등록시간을 설정합니다..
	 * 
	 * @param creationTime
	 *            등록시간
	 */
	public void setCreationTime(Date creationTime) {
		this.creationTime = creationTime;
	}

	/**
	 * 등록시간을 가져옵니다..
	 * 
	 * @return 등록시간
	 */
	public Date getCreationTime() {
		return this.creationTime;
	}

	/**
	 * 수정자을 설정합니다..
	 * 
	 * @param modifier
	 *            수정자
	 */
	public void setModifier(String modifier) {
		this.modifier = modifier;
	}

	/**
	 * 수정자을 가져옵니다..
	 * 
	 * @return 수정자
	 */
	public String getModifier() {
		return this.modifier;
	}

	/**
	 * 수정시간을 설정합니다..
	 * 
	 * @param modifiedTime
	 *            수정시간
	 */
	public void setModifiedTime(Date modifiedTime) {
		this.modifiedTime = modifiedTime;
	}

	/**
	 * 수정시간을 가져옵니다..
	 * 
	 * @return 수정시간
	 */
	public Date getModifiedTime() {
		return this.modifiedTime;
	}
	
	

	public String getPlace() {
		return place;
	}

	public void setPlace(String place) {
		this.place = place;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		ManualTicketManagement other = (ManualTicketManagement) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

}
