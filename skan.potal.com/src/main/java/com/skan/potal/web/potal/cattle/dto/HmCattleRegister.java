package com.skan.potal.web.potal.cattle.dto;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.skan.potal.web.potal.application.model.CmtbUser;

/**
 * 한우(암소/수소) 개체관리기록부 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class HmCattleRegister implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 개체식별번호. */
	@Id
	private String entityDiscernNo;

	/** 부 번 호. */
	private String parentPapaNo;

	/** 출생(입식)일. */
	private Date birthDay;

	/** 모 번 호. */
	private String parentMomNo;

	/** 귀표장착일. */
	private Date earTagDate;

	/** 거세일. */
	private Date castrationDate;

	/** 성별. */
	private String gender;

	/** 생성시간. */
	private Date createTime;

	/** 수정시간. */
	private Date modifyTime;

	/** cmtb_user. */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="userId")
	private CmtbUser cmtbUser;

	/** 구입기록 목록. */
	@OneToMany(mappedBy="hmCattleRegister", fetch=FetchType.LAZY)
	private Set<HmCattleBuyInfo> hmCattleBuyInfoSet;

	/** 송아지 기록 목록. */
	@OneToMany(mappedBy="hmCattleRegister", fetch=FetchType.LAZY)
	private Set<HmCattleCalfRecode> hmCattleCalfRecodeSet;

	/** 분만기록 목록. */
	@OneToMany(mappedBy="hmCattleRegister", fetch=FetchType.LAZY)
	private Set<HmCattleChildbirthRecode> hmCattleChildbirthRecodeSet;

	/** 질병 및 치료 목록. */
	@OneToMany(mappedBy="hmCattleRegister", fetch=FetchType.LAZY)
	private Set<HmCattleCureInfo> hmCattleCureInfoSet;

	/** 판매지정보 목록. */
	@OneToMany(mappedBy="hmCattleRegister", fetch=FetchType.LAZY)
	private Set<HmCattleSellStoreInfo> hmCattleSellStoreInfoSet;

	/**
	 * 생성자.
	 */
	public HmCattleRegister() {
		this.hmCattleBuyInfoSet = new HashSet<HmCattleBuyInfo>();
		this.hmCattleCalfRecodeSet = new HashSet<HmCattleCalfRecode>();
		this.hmCattleChildbirthRecodeSet = new HashSet<HmCattleChildbirthRecode>();
		this.hmCattleCureInfoSet = new HashSet<HmCattleCureInfo>();
		this.hmCattleSellStoreInfoSet = new HashSet<HmCattleSellStoreInfo>();
	}

	/**
	 * 개체식별번호을 설정합니다..
	 * 
	 * @param entityDiscernNo
	 *            개체식별번호
	 */
	public void setEntityDiscernNo(String entityDiscernNo) {
		this.entityDiscernNo = entityDiscernNo;
	}

	/**
	 * 개체식별번호을 가져옵니다..
	 * 
	 * @return 개체식별번호
	 */
	public String getEntityDiscernNo() {
		return this.entityDiscernNo;
	}

	/**
	 * 부 번 호을 설정합니다..
	 * 
	 * @param parentPapaNo
	 *            부 번 호
	 */
	public void setParentPapaNo(String parentPapaNo) {
		this.parentPapaNo = parentPapaNo;
	}

	/**
	 * 부 번 호을 가져옵니다..
	 * 
	 * @return 부 번 호
	 */
	public String getParentPapaNo() {
		return this.parentPapaNo;
	}

	/**
	 * 출생(입식)일을 설정합니다..
	 * 
	 * @param birthDay
	 *            출생(입식)일
	 */
	public void setBirthDay(Date birthDay) {
		this.birthDay = birthDay;
	}

	/**
	 * 출생(입식)일을 가져옵니다..
	 * 
	 * @return 출생(입식)일
	 */
	public Date getBirthDay() {
		return this.birthDay;
	}

	/**
	 * 모 번 호을 설정합니다..
	 * 
	 * @param parentMomNo
	 *            모 번 호
	 */
	public void setParentMomNo(String parentMomNo) {
		this.parentMomNo = parentMomNo;
	}

	/**
	 * 모 번 호을 가져옵니다..
	 * 
	 * @return 모 번 호
	 */
	public String getParentMomNo() {
		return this.parentMomNo;
	}

	/**
	 * 귀표장착일을 설정합니다..
	 * 
	 * @param earTagDate
	 *            귀표장착일
	 */
	public void setEarTagDate(Date earTagDate) {
		this.earTagDate = earTagDate;
	}

	/**
	 * 귀표장착일을 가져옵니다..
	 * 
	 * @return 귀표장착일
	 */
	public Date getEarTagDate() {
		return this.earTagDate;
	}

	/**
	 * 거세일을 설정합니다..
	 * 
	 * @param castrationDate
	 *            거세일
	 */
	public void setCastrationDate(Date castrationDate) {
		this.castrationDate = castrationDate;
	}

	/**
	 * 거세일을 가져옵니다..
	 * 
	 * @return 거세일
	 */
	public Date getCastrationDate() {
		return this.castrationDate;
	}

	/**
	 * 성별을 설정합니다..
	 * 
	 * @param gender
	 *            성별
	 */
	public void setGender(String gender) {
		this.gender = gender;
	}

	/**
	 * 성별을 가져옵니다..
	 * 
	 * @return 성별
	 */
	public String getGender() {
		return this.gender;
	}

	/**
	 * 생성시간을 설정합니다..
	 * 
	 * @param createTime
	 *            생성시간
	 */
	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	/**
	 * 생성시간을 가져옵니다..
	 * 
	 * @return 생성시간
	 */
	public Date getCreateTime() {
		return this.createTime;
	}

	/**
	 * 수정시간을 설정합니다..
	 * 
	 * @param modifyTime
	 *            수정시간
	 */
	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	/**
	 * 수정시간을 가져옵니다..
	 * 
	 * @return 수정시간
	 */
	public Date getModifyTime() {
		return this.modifyTime;
	}

	/**
	 * cmtb_user을 설정합니다..
	 * 
	 * @param cmtbUser
	 *            cmtb_user
	 */
	public void setCmtbUser(CmtbUser cmtbUser) {
		this.cmtbUser = cmtbUser;
	}

	/**
	 * cmtb_user을 가져옵니다..
	 * 
	 * @return cmtb_user
	 */
	public CmtbUser getCmtbUser() {
		return this.cmtbUser;
	}

	/**
	 * 구입기록 목록을 설정합니다..
	 * 
	 * @param hmCattleBuyInfoSet
	 *            구입기록 목록
	 */
	public void setHmCattleBuyInfoSet(Set<HmCattleBuyInfo> hmCattleBuyInfoSet) {
		this.hmCattleBuyInfoSet = hmCattleBuyInfoSet;
	}

	/**
	 * 구입기록를 추가합니다..
	 * 
	 * @param hmCattleBuyInfo
	 *            구입기록
	 */
	public void addHmCattleBuyInfo(HmCattleBuyInfo hmCattleBuyInfo) {
		this.hmCattleBuyInfoSet.add(hmCattleBuyInfo);
	}

	/**
	 * 구입기록 목록을 가져옵니다..
	 * 
	 * @return 구입기록 목록
	 */
	public Set<HmCattleBuyInfo> getHmCattleBuyInfoSet() {
		return this.hmCattleBuyInfoSet;
	}

	/**
	 * 송아지 기록 목록을 설정합니다..
	 * 
	 * @param hmCattleCalfRecodeSet
	 *            송아지 기록 목록
	 */
	public void setHmCattleCalfRecodeSet(Set<HmCattleCalfRecode> hmCattleCalfRecodeSet) {
		this.hmCattleCalfRecodeSet = hmCattleCalfRecodeSet;
	}

	/**
	 * 송아지 기록를 추가합니다..
	 * 
	 * @param hmCattleCalfRecode
	 *            송아지 기록
	 */
	public void addHmCattleCalfRecode(HmCattleCalfRecode hmCattleCalfRecode) {
		this.hmCattleCalfRecodeSet.add(hmCattleCalfRecode);
	}

	/**
	 * 송아지 기록 목록을 가져옵니다..
	 * 
	 * @return 송아지 기록 목록
	 */
	public Set<HmCattleCalfRecode> getHmCattleCalfRecodeSet() {
		return this.hmCattleCalfRecodeSet;
	}

	/**
	 * 분만기록 목록을 설정합니다..
	 * 
	 * @param hmCattleChildbirthRecodeSet
	 *            분만기록 목록
	 */
	public void setHmCattleChildbirthRecodeSet(Set<HmCattleChildbirthRecode> hmCattleChildbirthRecodeSet) {
		this.hmCattleChildbirthRecodeSet = hmCattleChildbirthRecodeSet;
	}

	/**
	 * 분만기록를 추가합니다..
	 * 
	 * @param hmCattleChildbirthRecode
	 *            분만기록
	 */
	public void addHmCattleChildbirthRecode(HmCattleChildbirthRecode hmCattleChildbirthRecode) {
		this.hmCattleChildbirthRecodeSet.add(hmCattleChildbirthRecode);
	}

	/**
	 * 분만기록 목록을 가져옵니다..
	 * 
	 * @return 분만기록 목록
	 */
	public Set<HmCattleChildbirthRecode> getHmCattleChildbirthRecodeSet() {
		return this.hmCattleChildbirthRecodeSet;
	}

	/**
	 * 질병 및 치료 목록을 설정합니다..
	 * 
	 * @param hmCattleCureInfoSet
	 *            질병 및 치료 목록
	 */
	public void setHmCattleCureInfoSet(Set<HmCattleCureInfo> hmCattleCureInfoSet) {
		this.hmCattleCureInfoSet = hmCattleCureInfoSet;
	}

	/**
	 * 질병 및 치료를 추가합니다..
	 * 
	 * @param hmCattleCureInfo
	 *            질병 및 치료
	 */
	public void addHmCattleCureInfo(HmCattleCureInfo hmCattleCureInfo) {
		this.hmCattleCureInfoSet.add(hmCattleCureInfo);
	}

	/**
	 * 질병 및 치료 목록을 가져옵니다..
	 * 
	 * @return 질병 및 치료 목록
	 */
	public Set<HmCattleCureInfo> getHmCattleCureInfoSet() {
		return this.hmCattleCureInfoSet;
	}

	/**
	 * 판매지정보 목록을 설정합니다..
	 * 
	 * @param hmCattleSellStoreInfoSet
	 *            판매지정보 목록
	 */
	public void setHmCattleSellStoreInfoSet(Set<HmCattleSellStoreInfo> hmCattleSellStoreInfoSet) {
		this.hmCattleSellStoreInfoSet = hmCattleSellStoreInfoSet;
	}

	/**
	 * 판매지정보를 추가합니다..
	 * 
	 * @param hmCattleSellStoreInfo
	 *            판매지정보
	 */
	public void addHmCattleSellStoreInfo(HmCattleSellStoreInfo hmCattleSellStoreInfo) {
		this.hmCattleSellStoreInfoSet.add(hmCattleSellStoreInfo);
	}

	/**
	 * 판매지정보 목록을 가져옵니다..
	 * 
	 * @return 판매지정보 목록
	 */
	public Set<HmCattleSellStoreInfo> getHmCattleSellStoreInfoSet() {
		return this.hmCattleSellStoreInfoSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((entityDiscernNo == null) ? 0 : entityDiscernNo.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		HmCattleRegister other = (HmCattleRegister) obj;
		if (entityDiscernNo == null) {
			if (other.entityDiscernNo != null) {
				return false;
			}
		} else if (!entityDiscernNo.equals(other.entityDiscernNo)) {
			return false;
		}
		return true;
	}

}
