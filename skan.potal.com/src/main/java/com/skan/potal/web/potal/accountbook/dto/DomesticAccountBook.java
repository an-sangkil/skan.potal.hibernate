package com.skan.potal.web.potal.accountbook.dto;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;

/**
 * 가계부(house_keeping_book) 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@javax.persistence.Entity
@Table
public class DomesticAccountBook implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 관리번호. */
	@Id
	private String dabMngNo;

	/** 유형코드(타입)  수입/지출. */
	private String typeCode;

	/** 세부유형 코드 (유형에따른 ). */
	private String detailTypeCode;

	/** 거래일. */
	@DateTimeFormat(iso=ISO.DATE)
	@Temporal(TemporalType.DATE)
	private Date businessDay;

	/** 금액. */
	private BigDecimal amount;

	/** 내역. */
	private String breakdown;

	/** 세부내용. */
	private String detailContents;

	/**
	 * 생성자.
	 */
	public DomesticAccountBook() {
	}

	/**
	 * 관리번호을 설정합니다..
	 * 
	 * @param dabMngNo
	 *            관리번호
	 */
	public void setDabMngNo(String dabMngNo) {
		this.dabMngNo = dabMngNo;
	}

	/**
	 * 관리번호을 가져옵니다..
	 * 
	 * @return 관리번호
	 */
	public String getDabMngNo() {
		return this.dabMngNo;
	}

	/**
	 * 유형코드(타입)  수입/지출을 설정합니다..
	 * 
	 * @param typeCode
	 *            유형코드(타입)  수입/지출
	 */
	public void setTypeCode(String typeCode) {
		this.typeCode = typeCode;
	}

	/**
	 * 유형코드(타입)  수입/지출을 가져옵니다..
	 * 
	 * @return 유형코드(타입)  수입/지출
	 */
	public String getTypeCode() {
		return this.typeCode;
	}

	/**
	 * 세부유형 코드 (유형에따른 )을 설정합니다..
	 * 
	 * @param detailTypeCode
	 *            세부유형 코드 (유형에따른 )
	 */
	public void setDetailTypeCode(String detailTypeCode) {
		this.detailTypeCode = detailTypeCode;
	}

	/**
	 * 세부유형 코드 (유형에따른 )을 가져옵니다..
	 * 
	 * @return 세부유형 코드 (유형에따른 )
	 */
	public String getDetailTypeCode() {
		return this.detailTypeCode;
	}

	/**
	 * 거래일을 설정합니다..
	 * 
	 * @param businessDay
	 *            거래일
	 */
	public void setBusinessDay(Date businessDay) {
		this.businessDay = businessDay;
	}

	/**
	 * 거래일을 가져옵니다..
	 * 
	 * @return 거래일
	 */
	public Date getBusinessDay() {
		return this.businessDay;
	}

	/**
	 * 금액을 설정합니다..
	 * 
	 * @param amount
	 *            금액
	 */
	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	/**
	 * 금액을 가져옵니다..
	 * 
	 * @return 금액
	 */
	public BigDecimal getAmount() {
		return this.amount;
	}

	/**
	 * 내역을 설정합니다..
	 * 
	 * @param breakdown
	 *            내역
	 */
	public void setBreakdown(String breakdown) {
		this.breakdown = breakdown;
	}

	/**
	 * 내역을 가져옵니다..
	 * 
	 * @return 내역
	 */
	public String getBreakdown() {
		return this.breakdown;
	}

	/**
	 * 세부내용을 설정합니다..
	 * 
	 * @param detailContents
	 *            세부내용
	 */
	public void setDetailContents(String detailContents) {
		this.detailContents = detailContents;
	}

	/**
	 * 세부내용을 가져옵니다..
	 * 
	 * @return 세부내용
	 */
	public String getDetailContents() {
		return this.detailContents;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((dabMngNo == null) ? 0 : dabMngNo.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		DomesticAccountBook other = (DomesticAccountBook) obj;
		if (dabMngNo == null) {
			if (other.dabMngNo != null) {
				return false;
			}
		} else if (!dabMngNo.equals(other.dabMngNo)) {
			return false;
		}
		return true;
	}

}