package com.skan.potal.web.potal.application.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * cmtb_group 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class CmtbGroup implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 그룹번호. */
	@Id
	private Long groupNo;

	/** 그룹 이름. */
	private String groupName;

	/** 그룹설명. */
	private String groupDesc;

	/** 그룹 생성일. */
	private Date groupCrtTime;
	
	/** 그룹멤버 목록. */
	@OneToMany(mappedBy="cmtbGroup")
	private Set<CmtbGroupMember> cmtbGroupMemberSet;


	/**
	 * 그룹번호을 설정합니다..
	 * 
	 * @param groupNo
	 *            그룹번호
	 */
	public void setGroupNo(Long groupNo) {
		this.groupNo = groupNo;
	}

	/**
	 * 그룹번호을 가져옵니다..
	 * 
	 * @return 그룹번호
	 */
	public Long getGroupNo() {
		return this.groupNo;
	}

	/**
	 * 그룹 이름을 설정합니다..
	 * 
	 * @param groupName
	 *            그룹 이름
	 */
	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	/**
	 * 그룹 이름을 가져옵니다..
	 * 
	 * @return 그룹 이름
	 */
	public String getGroupName() {
		return this.groupName;
	}

	/**
	 * 그룹설명을 설정합니다..
	 * 
	 * @param groupDesc
	 *            그룹설명
	 */
	public void setGroupDesc(String groupDesc) {
		this.groupDesc = groupDesc;
	}

	/**
	 * 그룹설명을 가져옵니다..
	 * 
	 * @return 그룹설명
	 */
	public String getGroupDesc() {
		return this.groupDesc;
	}

	/**
	 * 그룹 생성일을 설정합니다..
	 * 
	 * @param groupCrtTime
	 *            그룹 생성일
	 */
	public void setGroupCrtTime(Date groupCrtTime) {
		this.groupCrtTime = groupCrtTime;
	}

	/**
	 * 그룹 생성일을 가져옵니다..
	 * 
	 * @return 그룹 생성일
	 */
	public Date getGroupCrtTime() {
		return this.groupCrtTime;
	}

	/**
	 * 그룹멤버 목록을 설정합니다..
	 * 
	 * @param cmtbGroupMemberSet
	 *            그룹멤버 목록
	 */
	public void setCmtbGroupMemberSet(Set<CmtbGroupMember> cmtbGroupMemberSet) {
		this.cmtbGroupMemberSet = cmtbGroupMemberSet;
	}

	/**
	 * 그룹멤버를 추가합니다..
	 * 
	 * @param cmtbGroupMember
	 *            그룹멤버
	 */
	public void addCmtbGroupMember(CmtbGroupMember cmtbGroupMember) {
		this.cmtbGroupMemberSet.add(cmtbGroupMember);
	}

	/**
	 * 그룹멤버 목록을 가져옵니다..
	 * 
	 * @return 그룹멤버 목록
	 */
	public Set<CmtbGroupMember> getCmtbGroupMemberSet() {
		return this.cmtbGroupMemberSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((groupNo == null) ? 0 : groupNo.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		CmtbGroup other = (CmtbGroup) obj;
		if (groupNo == null) {
			if (other.groupNo != null) {
				return false;
			}
		} else if (!groupNo.equals(other.groupNo)) {
			return false;
		}
		return true;
	}

}
