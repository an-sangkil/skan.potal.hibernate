package com.skan.potal.web.potal.address.model;

import java.io.Serializable;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.NotEmpty;

import com.skan.potal.web.potal.application.model.CmtbUser;

/**
 * 주소록 관리 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class HmMngAddress implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "address_seq_gen")
	@SequenceGenerator(name="address_seq_gen", allocationSize=1)
	/** 관리 번호. */
	private Long hmMgNum;

	/** cmtb_user. */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="userId")
	private CmtbUser cmtbUser;

	/** 이름. */
	@NotEmpty
	private String name;

	/** 홈페이지주소. */
	private String homepageUrl;

	/** hm_memo. */
	private String hmMemo;

	/** 주소 목록. */
	@OneToMany(mappedBy="hmMngAddress",fetch=FetchType.LAZY)
	private Set<HmAddressInfo> hmAddressInfoSet;

	/** 주소록 전화번호부 목록. */
	@OneToMany(mappedBy="hmMngAddress",fetch=FetchType.LAZY)
	private Set<HmAddressPhone> hmAddressPhoneSet;

	/** 기념일 목록. */
	@Transient
	private Set<HmAnniversaryMng> hmAnniversaryMngSet;

	/** 이메일 정보 목록. */
	@OneToMany(mappedBy="hmMngAddress")
	private Set<HmEmailInfo> hmEmailInfoSet;

	/**
	 * 생성자.
	 */
	public HmMngAddress() {
		//this.hmAddressInfoSet = new HashSet<HmAddressInfo>();
		//this.hmAddressPhoneSet = new HashSet<HmAddressPhone>();
		//this.hmAnniversaryMngSet = new HashSet<HmAnniversaryMng>();
		//this.hmEmailInfoSet = new HashSet<HmEmailInfo>();
	}

	/**
	 * 관리 번호을 설정합니다..
	 * 
	 * @param hmMgNum
	 *            관리 번호
	 */
	public void setHmMgNum(Long hmMgNum) {
		this.hmMgNum = hmMgNum;
	}

	/**
	 * 관리 번호을 가져옵니다..
	 * 
	 * @return 관리 번호
	 */
	public Long getHmMgNum() {
		return this.hmMgNum;
	}

//	/**
//	 * cmtb_user을 설정합니다..
//	 * 
//	 * @param cmtbUser
//	 *            cmtb_user
//	 */
//	public void setCmtbUser(CmtbUser cmtbUser) {
//		this.cmtbUser = cmtbUser;
//	}
//
//	/**
//	 * cmtb_user을 가져옵니다..
//	 * 
//	 * @return cmtb_user
//	 */
//	public CmtbUser getCmtbUser() {
//		return this.cmtbUser;
//	}

	/**
	 * 이름을 설정합니다..
	 * 
	 * @param name
	 *            이름
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * 이름을 가져옵니다..
	 * 
	 * @return 이름
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * 홈페이지주소을 설정합니다..
	 * 
	 * @param homepageUrl
	 *            홈페이지주소
	 */
	public void setHomepageUrl(String homepageUrl) {
		this.homepageUrl = homepageUrl;
	}

	/**
	 * 홈페이지주소을 가져옵니다..
	 * 
	 * @return 홈페이지주소
	 */
	public String getHomepageUrl() {
		return this.homepageUrl;
	}

	/**
	 * hm_memo을 설정합니다..
	 * 
	 * @param hmMemo
	 *            hm_memo
	 */
	public void setHmMemo(String hmMemo) {
		this.hmMemo = hmMemo;
	}

	/**
	 * hm_memo을 가져옵니다..
	 * 
	 * @return hm_memo
	 */
	public String getHmMemo() {
		return this.hmMemo;
	}

	/**
	 * 주소 목록을 설정합니다..
	 * 
	 * @param hmAddressInfoSet
	 *            주소 목록
	 */
	public void setHmAddressInfoSet(Set<HmAddressInfo> hmAddressInfoSet) {
		this.hmAddressInfoSet = hmAddressInfoSet;
	}

	/**
	 * 주소를 추가합니다..
	 * 
	 * @param hmAddressInfo
	 *            주소
	 */
	public void addHmAddressInfo(HmAddressInfo hmAddressInfo) {
		this.hmAddressInfoSet.add(hmAddressInfo);
	}

	/**
	 * 주소 목록을 가져옵니다..
	 * 
	 * @return 주소 목록
	 */
	public Set<HmAddressInfo> getHmAddressInfoSet() {
		return this.hmAddressInfoSet;
	}

	/**
	 * 주소록 전화번호부 목록을 설정합니다..
	 * 
	 * @param hmAddressPhoneSet
	 *            주소록 전화번호부 목록
	 */
	public void setHmAddressPhoneSet(Set<HmAddressPhone> hmAddressPhoneSet) {
		this.hmAddressPhoneSet = hmAddressPhoneSet;
	}

	/**
	 * 주소록 전화번호부를 추가합니다..
	 * 
	 * @param hmAddressPhone
	 *            주소록 전화번호부
	 */
	public void addHmAddressPhone(HmAddressPhone hmAddressPhone) {
		this.hmAddressPhoneSet.add(hmAddressPhone);
	}

	/**
	 * 주소록 전화번호부 목록을 가져옵니다..
	 * 
	 * @return 주소록 전화번호부 목록
	 */
	public Set<HmAddressPhone> getHmAddressPhoneSet() {
		return this.hmAddressPhoneSet;
	}

	/**
	 * 기념일 목록을 설정합니다..
	 * 
	 * @param hmAnniversaryMngSet
	 *            기념일 목록
	 */
	public void setHmAnniversaryMngSet(Set<HmAnniversaryMng> hmAnniversaryMngSet) {
		this.hmAnniversaryMngSet = hmAnniversaryMngSet;
	}

	/**
	 * 기념일를 추가합니다..
	 * 
	 * @param hmAnniversaryMng
	 *            기념일
	 */
	public void addHmAnniversaryMng(HmAnniversaryMng hmAnniversaryMng) {
		this.hmAnniversaryMngSet.add(hmAnniversaryMng);
	}

	/**
	 * 기념일 목록을 가져옵니다..
	 * 
	 * @return 기념일 목록
	 */
	public Set<HmAnniversaryMng> getHmAnniversaryMngSet() {
		return this.hmAnniversaryMngSet;
	}

	/**
	 * 이메일 정보 목록을 설정합니다..
	 * 
	 * @param hmEmailInfoSet
	 *            이메일 정보 목록
	 */
	public void setHmEmailInfoSet(Set<HmEmailInfo> hmEmailInfoSet) {
		this.hmEmailInfoSet = hmEmailInfoSet;
	}

	/**
	 * 이메일 정보를 추가합니다..
	 * 
	 * @param hmEmailInfo
	 *            이메일 정보
	 */
	public void addHmEmailInfo(HmEmailInfo hmEmailInfo) {
		this.hmEmailInfoSet.add(hmEmailInfo);
	}

	/**
	 * 이메일 정보 목록을 가져옵니다..
	 * 
	 * @return 이메일 정보 목록
	 */
	public Set<HmEmailInfo> getHmEmailInfoSet() {
		return this.hmEmailInfoSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((hmMgNum == null) ? 0 : hmMgNum.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		HmMngAddress other = (HmMngAddress) obj;
		if (hmMgNum == null) {
			if (other.hmMgNum != null) {
				return false;
			}
		} else if (!hmMgNum.equals(other.hmMgNum)) {
			return false;
		}
		return true;
	}

}
