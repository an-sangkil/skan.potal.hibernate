package com.skan.potal.web.potal.address.model;

import java.io.Serializable;

import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * 주소록 전화번호부 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class HmAddressPhone implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 주소록 전화번호부 composite - id. */
	@EmbeddedId private HmAddressPhoneId hmAddressPhoneId;

	/** 주소록 관리. */
	@ManyToOne
	@JoinColumn(name="hmMgNum", insertable=false, updatable=false)
	private HmMngAddress hmMngAddress;

	/** 전화번호. */
	private String phoneNumber;

	/** 구분. */
	private String type;

	/**
	 * 생성자.
	 */
	public HmAddressPhone() {
	}

	/**
	 * 주소록 전화번호부 composite - id을 설정합니다..
	 * 
	 * @param hmAddressPhoneId
	 *            주소록 전화번호부 composite - id
	 */
	public void setHmAddressPhoneId(HmAddressPhoneId hmAddressPhoneId) {
		this.hmAddressPhoneId = hmAddressPhoneId;
	}

	/**
	 * 주소록 전화번호부 composite - id을 가져옵니다..
	 * 
	 * @return 주소록 전화번호부 composite - id
	 */
	public HmAddressPhoneId getHmAddressPhoneId() {
		return this.hmAddressPhoneId;
	}

	/**
	 * 주소록 관리을 설정합니다..
	 * 
	 * @param hmMngAddress
	 *            주소록 관리
	 */
	public void setHmMngAddress(HmMngAddress hmMngAddress) {
		this.hmMngAddress = hmMngAddress;
	}

	/**
	 * 주소록 관리을 가져옵니다..
	 * 
	 * @return 주소록 관리
	 */
	public HmMngAddress getHmMngAddress() {
		return this.hmMngAddress;
	}

	/**
	 * 전화번호을 설정합니다..
	 * 
	 * @param phoneNumber
	 *            전화번호
	 */
	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	/**
	 * 전화번호을 가져옵니다..
	 * 
	 * @return 전화번호
	 */
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	/**
	 * 구분을 설정합니다..
	 * 
	 * @param type
	 *            구분
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * 구분을 가져옵니다..
	 * 
	 * @return 구분
	 */
	public String getType() {
		return this.type;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((hmAddressPhoneId == null) ? 0 : hmAddressPhoneId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		HmAddressPhone other = (HmAddressPhone) obj;
		if (hmAddressPhoneId == null) {
			if (other.hmAddressPhoneId != null) {
				return false;
			}
		} else if (!hmAddressPhoneId.equals(other.hmAddressPhoneId)) {
			return false;
		}
		return true;
	}

}
