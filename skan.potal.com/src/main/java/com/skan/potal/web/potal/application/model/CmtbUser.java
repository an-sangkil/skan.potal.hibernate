package com.skan.potal.web.potal.application.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * cmtb_user 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class CmtbUser implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 사용자 아이디. */
	@Id
	private String userId;

	/** 패스워드. */
	private String password;

	/** 사용자이름. */
	private String userName;

	/** 이메일. */
	private String email;

	/** 전화번호. */
	private String phoneNumber;

	/** 휴대전화번호. */
	private String mobilePhoneNumber;

	/** 주민번호. */
	private String ssnNumber;

	/** 성별. */
	private String gender;

	/** 마지막 접속 시간. */
	private Date lastLoginTime;

	/** 마지막 실패 시간. */
	private Date failLoginTime;

	/** 실패카운트. */
	private Long failLoginCount;

	/** 잠금여부. */
	private String useLockState;

	/** 비고. */
	private String description;

	/** 그룹멤버 목록. */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name="groupNo",insertable=false, updatable=false)
		,@JoinColumn(name="userId",insertable=false, updatable=false)
	})
	private CmtbGroupMember cmtbGroupMember;



	/**
	 * 생성자.
	 */
	public CmtbUser() {
	}

	/**
	 * 사용자 아이디을 설정합니다..
	 * 
	 * @param userId
	 *            사용자 아이디
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * 사용자 아이디을 가져옵니다..
	 * 
	 * @return 사용자 아이디
	 */
	public String getUserId() {
		return this.userId;
	}

	/**
	 * 패스워드을 설정합니다..
	 * 
	 * @param password
	 *            패스워드
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * 패스워드을 가져옵니다..
	 * 
	 * @return 패스워드
	 */
	public String getPassword() {
		return this.password;
	}

	/**
	 * 사용자이름을 설정합니다..
	 * 
	 * @param userName
	 *            사용자이름
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * 사용자이름을 가져옵니다..
	 * 
	 * @return 사용자이름
	 */
	public String getUserName() {
		return this.userName;
	}

	/**
	 * 이메일을 설정합니다..
	 * 
	 * @param email
	 *            이메일
	 */
	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * 이메일을 가져옵니다..
	 * 
	 * @return 이메일
	 */
	public String getEmail() {
		return this.email;
	}

	/**
	 * 전화번호을 설정합니다..
	 * 
	 * @param phoneNumber
	 *            전화번호
	 */
	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	/**
	 * 전화번호을 가져옵니다..
	 * 
	 * @return 전화번호
	 */
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	/**
	 * 휴대전화번호을 설정합니다..
	 * 
	 * @param mobilePhoneNumber
	 *            휴대전화번호
	 */
	public void setMobilePhoneNumber(String mobilePhoneNumber) {
		this.mobilePhoneNumber = mobilePhoneNumber;
	}

	/**
	 * 휴대전화번호을 가져옵니다..
	 * 
	 * @return 휴대전화번호
	 */
	public String getMobilePhoneNumber() {
		return this.mobilePhoneNumber;
	}

	/**
	 * 주민번호을 설정합니다..
	 * 
	 * @param ssnNumber
	 *            주민번호
	 */
	public void setSsnNumber(String ssnNumber) {
		this.ssnNumber = ssnNumber;
	}

	/**
	 * 주민번호을 가져옵니다..
	 * 
	 * @return 주민번호
	 */
	public String getSsnNumber() {
		return this.ssnNumber;
	}

	/**
	 * 성별을 설정합니다..
	 * 
	 * @param gender
	 *            성별
	 */
	public void setGender(String gender) {
		this.gender = gender;
	}

	/**
	 * 성별을 가져옵니다..
	 * 
	 * @return 성별
	 */
	public String getGender() {
		return this.gender;
	}

	/**
	 * 마지막 접속 시간을 설정합니다..
	 * 
	 * @param lastLoginTime
	 *            마지막 접속 시간
	 */
	public void setLastLoginTime(Date lastLoginTime) {
		this.lastLoginTime = lastLoginTime;
	}

	/**
	 * 마지막 접속 시간을 가져옵니다..
	 * 
	 * @return 마지막 접속 시간
	 */
	public Date getLastLoginTime() {
		return this.lastLoginTime;
	}

	/**
	 * 마지막 실패 시간을 설정합니다..
	 * 
	 * @param failLoginTime
	 *            마지막 실패 시간
	 */
	public void setFailLoginTime(Date failLoginTime) {
		this.failLoginTime = failLoginTime;
	}

	/**
	 * 마지막 실패 시간을 가져옵니다..
	 * 
	 * @return 마지막 실패 시간
	 */
	public Date getFailLoginTime() {
		return this.failLoginTime;
	}

	/**
	 * 실패카운트을 설정합니다..
	 * 
	 * @param failLoginCount
	 *            실패카운트
	 */
	public void setFailLoginCount(Long failLoginCount) {
		this.failLoginCount = failLoginCount;
	}

	/**
	 * 실패카운트을 가져옵니다..
	 * 
	 * @return 실패카운트
	 */
	public Long getFailLoginCount() {
		return this.failLoginCount;
	}

	/**
	 * 잠금여부을 설정합니다..
	 * 
	 * @param useLockState
	 *            잠금여부
	 */
	public void setUseLockState(String useLockState) {
		this.useLockState = useLockState;
	}

	/**
	 * 잠금여부을 가져옵니다..
	 * 
	 * @return 잠금여부
	 */
	public String getUseLockState() {
		return this.useLockState;
	}

	/**
	 * 비고을 설정합니다..
	 * 
	 * @param description
	 *            비고
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * 비고을 가져옵니다..
	 * 
	 * @return 비고
	 */
	public String getDescription() {
		return this.description;
	}

	//	/**
//	 * 주소록 관리 목록을 설정합니다..
//	 * 
//	 * @param hmMngAddressSet
//	 *            주소록 관리 목록
//	 */
//	public void setHmMngAddressSet(Set<HmMngAddress> hmMngAddressSet) {
//		this.hmMngAddressSet = hmMngAddressSet;
//	}
//
//	/**
//	 * 주소록 관리를 추가합니다..
//	 * 
//	 * @param hmMngAddress
//	 *            주소록 관리
//	 */
//	public void addHmMngAddress(HmMngAddress hmMngAddress) {
//		this.hmMngAddressSet.add(hmMngAddress);
//	}
//
//	/**
//	 * 주소록 관리 목록을 가져옵니다..
//	 * 
//	 * @return 주소록 관리 목록
//	 */
//	public Set<HmMngAddress> getHmMngAddressSet() {
//		return this.hmMngAddressSet;
//	}



}
