package com.skan.tms.web.jpa.dto;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * 유료회원정보 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
public class Membership implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;
	
	public Membership() {
		System.out.println(userDto);
	}
	
	/**
	 * 생성자.
	 */
	public Membership(UserDto userDto) {
		
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	/** 멤버쉽 번호 자동증가값. */
	private Long membershipSeq;

	/** 회원종류. */
	@ManyToOne
	@JoinColumn(name="membershipTypeCode",referencedColumnName="membershipTypeCode")
	private MembershipType membershipType;

	/** 사용자 email. */
	@ManyToOne
	@JoinColumn(referencedColumnName="email", name="email" , nullable=false)
	@JsonIgnore
	private UserDto userDto;
	
	@Transient
	private String cellPholeNumber;

	/** 유효기간 시작일. */
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(iso=ISO.DATE)
	private Date startDate;

	/** 유효기간 종료일. */
	@Temporal(TemporalType.DATE)
	@DateTimeFormat(iso=ISO.DATE)
	private Date endDate;
	
	/** 결제 트렌젝션 번호 */
	@Column(length=128)
	private String tid;
	
	@Column(length=64)
	private String paymentType;
	
	/** 상품주문번호 */
	@Column(length=128)
	private String orderIdx; 

	/** 등록자. */
	@Column(length=32)
	private String creator;

	/** 등록시간. */
	@Temporal(TemporalType.TIMESTAMP)
	private Date creationTime;

	/** 결제상태(결제완료, 결제 취소, 결제진행중 등). */
	@Column(length = 32)
	private String paymentState;

	/** 수정자. */
	@Column(length = 32)
	private String modifier;

	/** 수정시간. */
	@Temporal(TemporalType.TIMESTAMP)
	private Date modifiedTime;
	

	public String getPaymentState() {
		return paymentState;
	}

	public void setPaymentState(String paymentState) {
		this.paymentState = paymentState;
	}

	public String getModifier() {
		return modifier;
	}

	public void setModifier(String modifier) {
		this.modifier = modifier;
	}

	public Date getModifiedTime() {
		return modifiedTime;
	}

	public void setModifiedTime(Date modifiedTime) {
		this.modifiedTime = modifiedTime;
	}

	
	public String getTid() {
		return tid;
	}
	public void setTid(String tid) {
		this.tid = tid;
	}
	public String getOrderIdx() {
		return orderIdx;
	}
	public void setOrderIdx(String orderIdx) {
		this.orderIdx = orderIdx;
	}

	public String getPaymentType() {
		return paymentType;
	}

	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	/**
	 * 멤버쉽 번호 자동증가값을 설정합니다..
	 * 
	 * @param membershipSeq
	 *            멤버쉽 번호 자동증가값
	 */
	public void setMembershipSeq(Long membershipSeq) {
		this.membershipSeq = membershipSeq;
	}

	/**
	 * 멤버쉽 번호 자동증가값을 가져옵니다..
	 * 
	 * @return 멤버쉽 번호 자동증가값
	 */
	public Long getMembershipSeq() {
		return this.membershipSeq;
	}

	/**
	 * 회원종류을 설정합니다..
	 * 
	 * @param membershipType
	 *            회원종류
	 */
	public void setMembershipType(MembershipType membershipType) {
		this.membershipType = membershipType;
	}

	/**
	 * 회원종류을 가져옵니다..
	 * 
	 * @return 회원종류
	 */
	public MembershipType getMembershipType() {
		return this.membershipType;
	}

	/**
	 * 사용자 email을 설정합니다..
	 * 
	 * @param email
	 *            사용자 email
	 */
	public UserDto getUserDto() {
		return userDto;
	}

	/**
	 * 사용자 email을 가져옵니다..
	 * 
	 * @return 사용자 email
	 */
	public void setUserDto(UserDto userDto) {
		this.userDto = userDto;
	}

	/**
	 * 유효기간 시작일을 설정합니다..
	 * 
	 * @param startDate
	 *            유효기간 시작일
	 */
	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	/**
	 * 유효기간 시작일을 가져옵니다..
	 * 
	 * @return 유효기간 시작일
	 */
	public Date getStartDate() {
		return this.startDate;
	}

	/**
	 * 유효기간 종료일을 설정합니다..
	 * 
	 * @param endDate
	 *            유효기간 종료일
	 */
	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	/**
	 * 유효기간 종료일을 가져옵니다..
	 * 
	 * @return 유효기간 종료일
	 */
	public Date getEndDate() {
		return this.endDate;
	}

	/**
	 * 등록자을 설정합니다..
	 * 
	 * @param creator
	 *            등록자
	 */
	public void setCreator(String creator) {
		this.creator = creator;
	}

	/**
	 * 등록자을 가져옵니다..
	 * 
	 * @return 등록자
	 */
	public String getCreator() {
		return this.creator;
	}

	/**
	 * 등록시간을 설정합니다..
	 * 
	 * @param creationTime
	 *            등록시간
	 */
	public void setCreationTime(Date creationTime) {
		this.creationTime = creationTime;
	}

	/**
	 * 등록시간을 가져옵니다..
	 * 
	 * @return 등록시간
	 */
	public Date getCreationTime() {
		return this.creationTime;
	}
	
	public String getCellPholeNumber() {
		if(userDto != null) {
			return this.cellPholeNumber = userDto.getCellPhone();
		}
		return ""; 
	}

	public void setCellPholeNumber(String cellPholeNumber) {
		this.cellPholeNumber = cellPholeNumber;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((membershipSeq == null) ? 0 : membershipSeq.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Membership other = (Membership) obj;
		if (membershipSeq == null) {
			if (other.membershipSeq != null) {
				return false;
			}
		} else if (!membershipSeq.equals(other.membershipSeq)) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "Membership [membershipSeq=" + membershipSeq + ", membershipType=" + membershipType + ", userDto="
				+ userDto + ", startDate=" + startDate + ", endDate=" + endDate + ", tid=" + tid + ", paymentType="
				+ paymentType + ", orderIdx=" + orderIdx + ", creator=" + creator + ", creationTime=" + creationTime
				+ "]";
	}

}
