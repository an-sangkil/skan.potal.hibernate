/**
 * <pre>
 * Class Name  : CmtbCode.java
 * Description : 
 * Modification Information
 *
 *    수정일　　　 　　  수정자　　　     수정내용
 *    ────────────   ─────────   ───────────────────────────────
 *    2015. 12. 30.        ask               최초생성
 * </pre>
 *
 * @author ask
 * @since 2015. 12. 30.
 * @version 
 *
 * Copyright (C) 2015 by SKAN.COMPANY All right reserved.
 */
package com.skan.potal.web.potal.application.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.annotation.Nullable;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * 공통코드 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table
//@org.hibernate.annotations.Entity(dynamicInsert=true)
public class CmtbCode implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 코드 관리번호. */
	@EmbeddedId private CmtbCodeId cmtbCodeId;

	/** 상위코드. */
	@Column(nullable=true)
	private String upperCode;

	/** 그룹별 코드 순번. */
	private Long codeSeq;

	/** 코드이름. */
	private String codeName;

	/** 코드 설명. */
	private String codeComment;
	
	@OneToOne(fetch=FetchType.LAZY
			//,cascade={CascadeType.ALL}
	)
    @JoinColumns(
    		{
    				@JoinColumn(name="upperCode", insertable=false, updatable=false , columnDefinition="code",nullable=true)
//    				,@JoinColumn(name="codeMgtNo", insertable=false, updatable=false)
    			}
    		
    		)
    private CmtbCode cmtbUpperCode;

//	@OneToMany(mappedBy="cmtbUpperCode",fetch=FetchType.LAZY)
//    private Set<CmtbCode> subCmtbCode = new HashSet<CmtbCode>();
 
    
	
	/**
	 * 생성자.
	 */
	public CmtbCode() {
	}
	
	
	public CmtbCode getCmtbUpperCode() {
		return cmtbUpperCode;
	}


	public CmtbCodeId getCmtbCodeId() {
		return cmtbCodeId;
	}

	
	public void setCmtbCodeId(CmtbCodeId cmtbCodeId) {
		this.cmtbCodeId = cmtbCodeId;
	}

	
	/**
	 * 상위코드을 설정합니다..
	 * 
	 * @param upperCode
	 *            상위코드
	 */
	public void setUpperCode(String upperCode) {
		this.upperCode = upperCode;
	}

	/**
	 * 상위코드을 가져옵니다..
	 * 
	 * @return 상위코드
	 */
	public String getUpperCode() {
		return this.upperCode;
	}

	/**
	 * 그룹별 코드 순번을 설정합니다..
	 * 
	 * @param codeSeq
	 *            그룹별 코드 순번
	 */
	public void setCodeSeq(Long codeSeq) {
		this.codeSeq = codeSeq;
	}

	/**
	 * 그룹별 코드 순번을 가져옵니다..
	 * 
	 * @return 그룹별 코드 순번
	 */
	public Long getCodeSeq() {
		return this.codeSeq;
	}


	/**
	 * 코드이름을 설정합니다..
	 * 
	 * @param codeName
	 *            코드이름
	 */
	public void setCodeName(String codeName) {
		this.codeName = codeName;
	}

	/**
	 * 코드이름을 가져옵니다..
	 * 
	 * @return 코드이름
	 */
	public String getCodeName() {
		return this.codeName;
	}

	/**
	 * 코드 설명을 설정합니다..
	 * 
	 * @param codeComment
	 *            코드 설명
	 */
	public void setCodeComment(String codeComment) {
		this.codeComment = codeComment;
	}

	/**
	 * 코드 설명을 가져옵니다..
	 * 
	 * @return 코드 설명
	 */
	public String getCodeComment() {
		return this.codeComment;
	}
	
	@Override
	public String toString(){
		return ToStringBuilder.reflectionToString(this, ToStringStyle.MULTI_LINE_STYLE);
	}
}
